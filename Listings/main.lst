A51 MACRO ASSEMBLER  MAIN                                                                 11/22/2015 18:05:51 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\Objects\m
                      ain.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;======================================================================|
                       2     ; Practica 4, FUNDAMENTOS DE MICROPROCESADORES, ITESO.     |
                       3     ; AUTORES:                                                             |
                       4     ;       -ALEJANDRO WALLS        is693215@iteso.mx                      |
                       5     ;       -MARIO EUGENIO ZUï¿½IGA   ie693110@iteso.mx                      |
                       6     ;======================================================================|
                       7     
                       8     ;P3            Serial
                       9     ;P2.0 - 2.3    Salida Decoder Teclado
                      10     ;P2.7          Senal E de LCD
                      11     ;P2.6          Senal RS de LCD
                      12     ;P1            Datos LCD
                      13     
                      14     ; use command 01 for clearing display
                      15     ; use command 80 for first line of display
                      16     ; use command C0 for second line of display
                      17     
  00C8                18                     T2CON EQU 0C8H               ;T2CON registry location
  00CB                19                     RCAP2H EQU 0CBH              ;reload value for t2 location high
  00CA                20                     RCAP2L EQU 0CAH              ;reload value for t2 location low
                      21     
  00CD                22                     T2H EQU 0CDH                 ;timer 2 value high
  00CC                23                     T2L EQU 0CCH                 ;timer 2 value low
                      24     
  00A5                25                     INTERRUPTS EQU 10100101b        ;Interrupt flags, Global, Timer2, Button1, 
                             Button0
                      26     
  003A                27                     TICKCOUNT_1 EQU 3AH             ;Tick counter for refreshing displays
  003B                28                     BUTTON_COUNT EQU 3BH             ;Tick counter for buttons
  003C                29                     SECOND_COUNT EQU 3CH         ;Tick counter for seconds 1
  003D                30                     TICKCOUNT_250_2 EQU 3DH         ;Tick counter for seconds 2
  003E                31                     DEBOUNCER_COUNT EQU  3EH        ;Counter for debouncer, 20 ms
                      32     
  00A7                33                     REGISTER_SELECT EQU P2.7        ;RS LCD select signal
  00A6                34                     RW_ENABLE EQU P2.6              ;read write enable LCD signal
  0090                35                     LCD_DATA EQU P1                 ;LCD data bus
                      36     
  00B6                37                     GREEN_LED EQU P3.6
                      38     
  0040                39                     KEYPAD_VALUE EQU 40H            ;value of the key pressed
                      40     
                      41                     ;SUBROUTINE PARAMETERS
                      42                     ;====================================================================
  0050                43                     SEND_COMMAND_PARAM EQU 50H                                           ;
  0051                44                     SEND_DATA_PARAM EQU 51H                                              ;
                      45                     ;====================================================================
                      46     
0000                  47                     ORG     0000H                   ;RESET INTERRUPT
0000 803E             48                     JMP     START                   ;go to start on reset
                      49     
0003                  50                     ORG     0003H                   ;EXT0 INTERRUPT SWITCH BUTTON
0003 0194             51                     JMP     EXT0IRS
                      52     
0013                  53                     ORG     0013H                   ;EXT1 INTERRUPT EDIT BUTTON
                      54                     ;JMP     EXT1IRS
                      55     
002B                  56                     ORG     002BH                   ;T2 INTERRUPT
A51 MACRO ASSEMBLER  MAIN                                                                 11/22/2015 18:05:51 PAGE     2

002B 804F             57                     JMP     T2IRS                   ;Go to interrupt routine
                      58     
0040                  59                     ORG     0040H
0040 C2A6             60     START:          CLR     RW_ENABLE               ;(E) read write enable on 0
0042 C2A7             61                     CLR     REGISTER_SELECT         ;(RS) register select on 0
0044 75A8A5           62                     MOV     IE, #INTERRUPTS         ;enable global interrupt, enable timer 2 in
                             terrupt, enable ext1, enable ext0
0047 75B820           63                     MOV     IP, #00100000b          ;enable highest priority for timer 2
004A 75C800           64                     MOV     T2CON, #00000000b       ;reset T2 settings
                      65     
004D 753A00           66                     MOV     TICKCOUNT_1, #0d            ;reset tick count for all counters
0050 753E00           67                     MOV     DEBOUNCER_COUNT, #0d
0053 753B02           68                     MOV     BUTTON_COUNT, #2d
0056 753C14           69                     MOV     SECOND_COUNT, #20d
                      70                     
                      71     
0059 D2B6             72                     SETB    GREEN_LED
                      73     
005B 75CB4C           74                     MOV     RCAP2H, #76                 ;Load F830H into reload value (65536 - 
                             46079) = 19,457, 50ms tick
005E 75CA01           75                     MOV     RCAP2L, #01                 ; ^
                      76     
0061 75CD4C           77                     MOV     T2H, #76                    ;start timer at reload value
0064 75CC01           78                     MOV     T2L, #01                    ;
                      79     
0067 755100           80                     MOV     SEND_DATA_PARAM, #00H
006A 755000           81                     MOV     SEND_COMMAND_PARAM, #00H
                      82     
006D 75C804           83                     MOV     T2CON, #00000100b           ;Start T2
                      84     
0070 755001           85                     MOV     SEND_COMMAND_PARAM, #01H    ;clear display command
0073 11B8             86                     ACALL   SEND_COMMAND
                      87     
0075 75500F           88                     MOV     SEND_COMMAND_PARAM, #0FH    ;initialize display
0078 11B8             89                     ACALL   SEND_COMMAND
                      90     
007A 80FE             91                     JMP     $                           ;wait for interrupts
                      92     
                      93     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;TRIGGERS;;;;;;;;;;;;;;;;;;;;;;;;
                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      94     ;Triggered every T2 interrupt
007C C0D0             95     T2IRS:          PUSH    PSW
007E C0E0             96                     PUSH    ACC
0080 B2CF             97                     CPL     T2CON.7              ;reset T2 settings
0082 B2CA             98                     CPL     T2CON.2              ;
0084 1191             99                     ACALL   TICK                 ;go to tick routine
                     100     
0086 D0E0            101     EXIT_T2IRS:     POP     ACC                  ;return ACC
0088 D0D0            102                     POP     PSW                  ;return PSW
008A 75A8A5          103                     MOV     IE, #INTERRUPTS      ;enable interruptions again
008D 75C804          104                     MOV     T2CON, #00000100b    ;Start T2
0090 32              105                     RETI
                     106     ;Tick subroutine, called every 50 ms
0091 053A            107     TICK:           INC TICKCOUNT_1
0093 22              108                     RET
                     109     
                     110     ;Triggered every ext0 interrupt
0094 C0D0            111     EXT0IRS:        PUSH    PSW
0096 C0E0            112                     PUSH    ACC
0098 C2A8            113                     CLR     EX0                  ;Disable external0 interrupt
009A C2AA            114                     CLR     EX1                  ;Disable external1 interrupt
009C 11E4            115                     ACALL   BUTTON_PRESSED       ;call button pressed routine
009E D0E0            116     EXIT_EXT0IRS:   POP     ACC
00A0 D0D0            117                     POP     PSW
00A2 D2A8            118                     SETB    EX0                  ; reenable ext0 interrupt
00A4 D2AA            119                     SETB    EX1                  ; reenable ext1 interrupt
A51 MACRO ASSEMBLER  MAIN                                                                 11/22/2015 18:05:51 PAGE     3

00A6 32              120                     RETI
                     121     
                     122     ;Triggered every ext1 interrupt
00A7 C0D0            123     EXT1IRS:        PUSH    PSW                ; save status before entering interrupt
00A9 C0E0            124                     PUSH    ACC
00AB C2A8            125                     CLR     EX0
00AD C2AA            126                     CLR     EX1
00AF D0E0            127     EXIT_EXT1IRS:   POP     ACC                ; load status after interrupt
00B1 D0D0            128                     POP     PSW
00B3 D2A8            129                     SETB    EX0                ; reenable ext0 interrupt
00B5 D2AA            130                     SETB    EX1                ; reenable ext1 interrupt
00B7 32              131                     RETI
                     132     
                     133     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ROUTINES;;;;;;;;;;;;;;;;;;;;;;;;
                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     134     ;SEND_COMMAND
                     135     ;TAKES: SEND_COMMAND_PARAM
                     136     ;RUN Display routine for the LCD display
                     137     ;================================================================
00B8 C2B6            138     SEND_COMMAND:   CLR     GREEN_LED                         ; turn on led
00BA 855090          139                     MOV     LCD_DATA, SEND_COMMAND_PARAM      ; write init command to data bus
00BD C2A7            140                     CLR     REGISTER_SELECT                   ; make sure RS is 0
00BF 753A00          141                     MOV     TICKCOUNT_1, #0d
00C2 D2A6            142                     SETB    RW_ENABLE                         ; activate write
00C4 E53A            143     MOV_AG1:        MOV     A, TICKCOUNT_1
00C6 B401FB          144                     CJNE    A, #1d, MOV_AG1                   ; wait 50ms
00C9 C2A6            145                     CLR     RW_ENABLE                         ; deactivate write
00CB D2B6            146                     SETB    GREEN_LED
00CD 22              147                     RET
                     148     
                     149     ;SEND_DATA
                     150     ;TAKES: SEND_DATA_PARAM
                     151     ;RUN Display routine for the LCD display
                     152     ;================================================================
00CE C2B6            153     SEND_DATA:      CLR     GREEN_LED                         ; turn on led
00D0 855190          154                     MOV     LCD_DATA, SEND_DATA_PARAM         ; write init command to data bus
00D3 D2A7            155                     SETB    REGISTER_SELECT                   ; make sure RS is 1
00D5 753A00          156                     MOV     TICKCOUNT_1, #0d
00D8 D2A6            157                     SETB    RW_ENABLE                         ; activate write
00DA E53A            158     MOV_AG2:        MOV     A, TICKCOUNT_1
00DC B401FB          159                     CJNE    A, #1d, MOV_AG2                   ; wait 50ms
00DF C2A6            160                     CLR     RW_ENABLE                         ; deactivate write
00E1 D2B6            161                     SETB    GREEN_LED
00E3 22              162                     RET
                     163     ; BUTTON PRESSED ROUTINE
                     164     ; SENDS THE DIRECT VALUE OF THE KEY PRESSED TO THE DISPLAY
                     165     ; ===============================================================
00E4 7540A0          166     BUTTON_PRESSED: MOV     KEYPAD_VALUE, #LOW(P2)               ; save
00E7 854051          167                     MOV     SEND_DATA_PARAM, KEYPAD_VALUE        ; set parameter value
00EA 11CE            168                     ACALL   SEND_DATA
00EC 3108            169                     ACALL   WAIT_1S                              ;wait 1s for the hell of it 
00EE 22              170     BP_EXIT:        RET
                     171     
                     172     ; ALT INPUT ROUTINE
                     173     ; SENDS HEXADECIMAL VALUE TO THE DISPLAY
                     174     ; ===============================================================
00EF D53B12          175     ALT_INPUT:      DJNZ    BUTTON_COUNT, REG_BUTTON1             ; if the count is not zero, s
                             ave the button value
00F2 E540            176                     MOV     A, KEYPAD_VALUE                      ; if it is zero, send the valu
                             e to screen
00F4 C4              177                     SWAP    A
00F5 F540            178                     MOV     KEYPAD_VALUE, A                      ; move keypad value to Acc for
                              nibble swap
00F7 7540A0          179                     MOV     KEYPAD_VALUE, #LOW(P2)               ; load value of keypad into ne
                             xt 4 bits
00FA 753B02          180                     MOV     BUTTON_COUNT, #2d                    ; reset button count
A51 MACRO ASSEMBLER  MAIN                                                                 11/22/2015 18:05:51 PAGE     4

00FD 854051          181                     MOV     SEND_DATA_PARAM, KEYPAD_VALUE        ; set parameter value
0100 11CE            182                     ACALL   SEND_DATA                            ; send data to LCD
0102 8003            183                     JMP     AI_EXIT                              ; exit
0104 7540A0          184     REG_BUTTON1:    MOV     KEYPAD_VALUE, #LOW(P2)               ; save
0107 22              185     AI_EXIT:        RET
                     186     
                     187     
0108 D53CFD          188     WAIT_1S:        DJNZ    SECOND_COUNT, $                      ;wait til counter is 0
010B 753C14          189                     MOV     SECOND_COUNT, #20d                   ;reset counter
010E 22              190                     RET                                          ;return 
                     191     
                     192     
                     193     END
A51 MACRO ASSEMBLER  MAIN                                                                 11/22/2015 18:05:51 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
AI_EXIT. . . . . .  C ADDR   0107H   A   
ALT_INPUT. . . . .  C ADDR   00EFH   A   
BP_EXIT. . . . . .  C ADDR   00EEH   A   
BUTTON_COUNT . . .  N NUMB   003BH   A   
BUTTON_PRESSED . .  C ADDR   00E4H   A   
DEBOUNCER_COUNT. .  N NUMB   003EH   A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXIT_EXT0IRS . . .  C ADDR   009EH   A   
EXIT_EXT1IRS . . .  C ADDR   00AFH   A   
EXIT_T2IRS . . . .  C ADDR   0086H   A   
EXT0IRS. . . . . .  C ADDR   0094H   A   
EXT1IRS. . . . . .  C ADDR   00A7H   A   
GREEN_LED. . . . .  B ADDR   00B0H.6 A   
IE . . . . . . . .  D ADDR   00A8H   A   
INTERRUPTS . . . .  N NUMB   00A5H   A   
IP . . . . . . . .  D ADDR   00B8H   A   
KEYPAD_VALUE . . .  N NUMB   0040H   A   
LCD_DATA . . . . .  D ADDR   0090H   A   
MOV_AG1. . . . . .  C ADDR   00C4H   A   
MOV_AG2. . . . . .  C ADDR   00DAH   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RCAP2H . . . . . .  N NUMB   00CBH   A   
RCAP2L . . . . . .  N NUMB   00CAH   A   
REGISTER_SELECT. .  B ADDR   00A0H.7 A   
REG_BUTTON1. . . .  C ADDR   0104H   A   
RW_ENABLE. . . . .  B ADDR   00A0H.6 A   
SECOND_COUNT . . .  N NUMB   003CH   A   
SEND_COMMAND . . .  C ADDR   00B8H   A   
SEND_COMMAND_PARAM  N NUMB   0050H   A   
SEND_DATA. . . . .  C ADDR   00CEH   A   
SEND_DATA_PARAM. .  N NUMB   0051H   A   
START. . . . . . .  C ADDR   0040H   A   
T2CON. . . . . . .  N NUMB   00C8H   A   
T2H. . . . . . . .  N NUMB   00CDH   A   
T2IRS. . . . . . .  C ADDR   007CH   A   
T2L. . . . . . . .  N NUMB   00CCH   A   
TICK . . . . . . .  C ADDR   0091H   A   
TICKCOUNT_1. . . .  N NUMB   003AH   A   
TICKCOUNT_250_2. .  N NUMB   003DH   A   
WAIT_1S. . . . . .  C ADDR   0108H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
